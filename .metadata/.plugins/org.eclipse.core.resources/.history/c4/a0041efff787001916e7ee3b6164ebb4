package movimiento;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JPanel;
import javax.swing.Timer;

public class Lamina extends JPanel implements KeyListener, ActionListener
{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Rectangle player;
	
	private int rx = 200;
	private int ry = 300;
	
	Point centro;
	Point movible;
	
	//Ángulo
	private double t = 0; 
	
	private int velocidadX = 15;
	private int velocidadY = 15;
	private Timer timer;
	
	public Lamina()
	{
		addKeyListener(this);
		setFocusable(true);
		setFocusTraversalKeysEnabled(false);
		timer = new Timer(60, this);
		
		player = new Rectangle(200, 0, 10, 10);
		
		centro = new Point(400, 400);
		
		timer.start();
		
	}
	
	
	
	public void paint(Graphics g1) 
	{
		
		Graphics2D g = (Graphics2D) g1;
		
		g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		
		g.setColor(Color.black);
		g.fillRect(0, 0, 800, 800);
		
		g.setColor(Color.green);
		
		g.drawOval((int) (centro.x - rx), (int) (centro.y -ry), 2 * rx, 2 * ry);
		
		movible = trayectoria(t -= 0.1);
		
		g.fillOval(movible.x, movible.y, 10, 10);
		
		g.dispose();
	}

	@Override
	public void actionPerformed(ActionEvent e) 
	{
		
		timer.start();
		
		player.x += velocidadX;
		player.y += velocidadY;
		
		repaint();
		
	}
	
	public Point trayectoria(double t) 
	{
		
		return new Point((int)(rx * Math.cos(t) + centro.x), (int) (ry * Math.sin(t) + centro.y));
		
	}
	
	@Override
	public void keyPressed(KeyEvent e) 
	{
		
		
	}



	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}



	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	
	
	
	
	

}
