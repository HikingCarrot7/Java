package flappyBird;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.Timer;

public class Gameplay extends JPanel implements KeyListener, ActionListener {
	
	private int [] Xposition = new int[750]; 
	private int [] Yposition = new int[750]; 
	
	private boolean right = false;
	private boolean left = false;
	private boolean up = false;
	private boolean down = false;
	
	
	private int position = 0;
	
	private Random random = new Random();
	
	int space = 300;
	int width = 100;
	int height = 50 + random.nextInt(300);
	

	public ArrayList<Rectangle> column;
	
	private Timer timer;
	private int delay = 100;
	
	public Gameplay () {
		
		addKeyListener(this);
		setFocusable(true);
		setFocusTraversalKeysEnabled(false);
		timer = new Timer (delay, this);
		timer.start();
	}
	
	public void paintColumn(Graphics g, Rectangle column) {
		
		g.setColor(Color.green.darker());
		g.fillRect(column.x, column.y, column.width, column.height);
		
	}
	
	public void paint(Graphics g) { 
	
		if (position == 0) {
			Xposition[0] = 100;
			Yposition[0] = 100;
		
		}
			// draw title image border
			g.setColor(Color.white);
			g.drawRect(24, 10, 651, 25);
			
			// draw border for gameplay
			g.setColor(Color.WHITE);
			g.drawRect(24, 74, 651, 577);
			
			// draw background for the gameplay
			g.setColor(Color.cyan);
			g.fillRect(25, 75, 650, 576);
			
			//Floor
			g.setColor(Color.orange);
			g.fillRect(25, 551, 650, 100);
			
			 //Bird
			g.setColor(Color.yellow);
			g.fillRect(150, 300, 20, 20);
			
			//Grass
			g.setColor(Color.green);
			g.fillRect(25, 531, 650, 20);
			
			timer.start();
			
			if (right) {
				
				for(int r = lengthofsnake -1; r >= 0; r--) {
					
					snakeYlength[r+1] = snakeYlength[r];
				}
				
				for(int r = lengthofsnake ; r >= 0; r--) {
					
					if(r == 0) {
						
						snakeXlength[r] = snakeXlength[r] + 25;
					} else {
						
						snakeXlength[r] = snakeXlength[r-1];
					}
					if (snakeXlength[r] > 850) {
						
						snakeXlength[r] = 25;
					}
				}
				
				repaint();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		
		
		
	}

	@Override
	public void keyPressed(KeyEvent e) {
		
		if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
			
			position++;
			right = true;
			
			if (!left) {
				
				right = true;
				
			} else {
				
				left = true;
				right = false;
				
			}
			up = false;
			down = false;
		}


	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

}
